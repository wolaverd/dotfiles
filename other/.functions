if [[ -e /etc/os-release ]]; then
	osrel=/etc/os-release
elif [[ -e /usr/lib/os-release ]]; then
	osrel=/usr/lib/os-release
fi

if [[ -n $osrel ]]; then
	distro="$(cat "$osrel" | awk -F '=' '$1 == "ID" {print $2}')"
fi

# Git
function grm { git diff --name-only --diff-filter=D -z | xargs --null git rm --cached; }
function gpush { git push --set-upstream origin master; }
function gclone { git clone ${1}:neeto/${2}.git; }

# Package manager
if [[ -n $distro ]]; then
	case "$distro" in
		arch )
			function upg { sudo pacman -Syyu; }
			;;
		ubuntu|debian )
			function upg { sudo apt-get update && sudo apt-get upgrade; }
			;;
	esac
fi

# Systemd
function jctl { sudo journalctl --all --quiet --catalog --pager-end; }
function sctl { sudo systemctl "$@"; }
function sctlfi { systemctl list-unit-files --all; }
function sedit { sudo systemctl edit --full "$@"; }

function sstatus { sudo systemctl status "$@"; }
function sstart { sudo systemctl start "$@"; sudo systemctl status "$@"; }
function sstop { sudo systemctl stop "$@"; sudo systemctl status "$@"; }
function srestart { sudo systemctl restart "$@"; sudo systemctl status "$@"; }
function senable { sudo systemctl enable "$@"; sudo systemctl status "$@"; }
function sdisable { sudo systemctl disable "$@"; sudo systemctl status "$@"; }
function ustart { systemctl --user start "$@"; systemctl --user status "$@"; }
function urestart { systemctl --user restart "$@"; systemctl --user status "$@"; }
function ustop { systemctl --user stop "$@"; systemctl --user status "$@"; }
function uenabled { systemctl --user enable "$@"; systemctl --user status "$@"; }
function udisabled { systemctl --user disable "$@"; systemctl --user status "$@"; }
function ustatus { systemctl --user status "$@"; }

# Misc
function lefix { sed --in-place 's/\r//g' "$@"; }
function mcd { mkdir --parents "$1" && cd "$1"; }
function mntext { sudo mount "$1" "$2" --options user,rw,umask=111,dmask=000; }
function tarx { tar xaf "$1" && rm "$1"; }
function tarc { tar caf "${1:-tarchive}" --remove-files "$2"; }
function getmem { free --mega | grep Mem | awk '{print $4}'; }
function lsobj { sudo awk '{printf "%5d MB %s\n", $3*$4/(1024*1024), $1}' /proc/slabinfo | sort --numeric-sort; }
function rlog { awk '$1 !~ /^(DEBUG|INFO|STATUS)/ {print}' "$1"; }
